plugins {
    id 'java'
    id 'war'
    id 'jacoco'
}

group 'br.com.smartlocadora'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.mockito:mockito-core:4.2.0'
    testImplementation 'org.mockito:mockito-inline:4.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.2.0'
    implementation 'javax.faces:javax.faces-api:2.2'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation group: 'org.glassfish', name: 'javax.faces', version: '2.2.9'
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.5.0.Final'
    implementation group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.5.0.Final'
    implementation group: 'org.hibernate', name: 'hibernate-validator', version: '6.0.2.Final'
    implementation group: 'mysql', 'name': 'mysql-connector-java', version: '8.0.27'
    implementation group: 'org.mariadb.jdbc', 'name': 'mariadb-java-client', version: '2.6.0'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '4.0.3'
    implementation group: 'org.primefaces', name: 'primefaces', version: '13.0.2'
    implementation group: 'org.primefaces.extensions', name: 'primefaces-extensions', version: '13.0.2'
    implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.13.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.21.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.21.1'
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
}

sourceSets {
    test {
        java.srcDirs = ['src/test/java']
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    testLogging {
        events "failed"
    }

    afterSuite { desc, result ->
        if (!desc.parent) {
            def failedTests = result.testCount - result.successfulTestCount
            if (failedTests > 0) {
                throw new GradleException("$failedTests test(s) failed.")
            }
        }
    }
}

check {
    dependsOn test
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'br/com/locadora/bean/**',
                    'br/com/locadora/config/**',
                    'br/com/locadora/dao/**',
                    'br/com/locadora/datamodel/**',
                    'br/com/locadora/domain/**',
                    'br/com/locadora/enums/**',
                    'br/com/locadora/filter/**',
                    'br/com/locadora/main/**',
                    'br/com/locadora/util/**',
                    'br/com/locadora/converter/**',
                    'br/com/locadora/permissions/**']).asFileTree
        }))
    }
}